{"version":3,"sources":["components/Navbar/navbar.js","components/Saved/savedbar.js","pages/Saved.js","components/SearchBar/searchbar.js","pages/Search.js","components/Grid/index.js","pages/Details.js","pages/NoMatch.js","components/Jumbotron/jumbotron.js","App.js","registerServiceWorker.js","index.js"],"names":["BarNav","react_default","a","createElement","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","SavedBar","Container","Jumbotron","Saved","React","Component","SearchBar","Form","Group","controlId","Label","Control","type","placeholder","Text","Button","variant","Search","_ref","fluid","children","concat","Row","_ref2","Col","_ref3","size","split","map","join","Details","Grid_Container","Grid_Row","react_router_dom","to","NoMatch","esm_Col","role","aria-label","GBJumbotron","App","react_router","path","pages_Search","pages_Saved","pages_Details","pages_NoMatch","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.18b9c2dd.chunk.js","sourcesContent":["import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nexport default function BarNav() {\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n            <Navbar.Brand href=\"/\">React-Google-Books-Search</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"/search\">Search</Nav.Link>\r\n                    <Nav.Link href=\"/saved\">Saved</Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nexport default function SavedBar() {\r\n    return (\r\n        <Container>\r\n            <Jumbotron>\r\n                <h1>Reading Wishlist</h1>\r\n                <h3> Saved Books</h3>\r\n            </Jumbotron>\r\n        </Container>\r\n\r\n    )\r\n}\r\n","import React from 'react';\r\nimport SavedBar from '../components/Saved/savedbar';\r\n\r\nclass Saved extends React.Component {\r\n    render() {\r\n\r\n        return (\r\n            <SavedBar />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Saved;","import React from 'react';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Container } from 'react-bootstrap';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nexport default function SearchBar() {\r\n    return (\r\n        <Container>\r\n            <Jumbotron>\r\n                <h1>Search For a Book</h1>\r\n                <Form>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Which book would you like to read? </Form.Label>\r\n                        <Form.Control type=\"textarea\" placeholder=\"Enter book title\" />\r\n                        <Form.Text className=\"text-muted\">\r\n                            \"I do believe something very magical can happen when you read a good book.\" - J.K. Rowling\r\n    </Form.Text>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Search\r\n  </Button>\r\n                </Form>\r\n\r\n            </Jumbotron>\r\n        </Container>\r\n\r\n    )\r\n}\r\n","import React from 'react';\r\nimport SearchBar from '../components/SearchBar/searchbar';\r\n// import ResultCard from '../components/ResultCard/resultcard'\r\nimport API from '../utils/API';\r\nimport Results from '../components/Results/results';\r\nimport ResultCard from '../components/ResultCard/resultcard';\r\n\r\n// function Search() {\r\n//     // Setting our component's initial state\r\n//     const [books, setBooks] = useState([])\r\n//     const [search, setSearchForm] = useState({})\r\n\r\n//     // Handles updating component state when the user types into the input (search) field\r\n//     function handleInputChange(event) {\r\n//         const { name, value } = event.target;\r\n//         setSearchForm({ [name]: value })\r\n//     };\r\n\r\n//     // When the form is submitted, use the API.saveBook method to save the book data\r\n//     // Then reload books from the database\r\n//     function handleFormSubmit(event) {\r\n//         event.preventDefault();\r\n//         if (search.query) {\r\n//             API.googleBooksSearch(search.query)\r\n//                 .then(res => {\r\n//                     console.log(res)\r\n//                     setBooks(res.items)})\r\n//                 .then(setSearchForm({}))\r\n//                 .catch(err => console.log(err));\r\n//         }\r\n//     };\r\n//     function saveBook(book) {\r\n//         console.log(book)\r\n//         API.insertBook(book)\r\n//     }\r\n\r\nclass Search extends React.Component {\r\n    render() {\r\n\r\n        return (\r\n            <container>\r\n                <div>\r\n                    <br></br>\r\n                    <SearchBar />\r\n                    {/* <Results /> */}\r\n\r\n                </div>\r\n            </container>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Search;","import React from \"react\";\r\n// import { Container, Row, Col } from 'react-bootstrap';\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\n// Exporting the Container, Row, and Col components from this file\r\n\r\n// This Container component allows us to use a bootstrap container without worrying about class names\r\nexport function Container({ fluid, children }) {\r\n    return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Row component lets us use a bootstrap row without having to think about class names\r\nexport function Row({ fluid, children }) {\r\n    return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Col component lets us size bootstrap columns with less syntax\r\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\r\nexport function Col({ size, children }) {\r\n    return (\r\n        <div\r\n            className={size\r\n                .split(\" \")\r\n                .map(size => \"col-\" + size)\r\n                .join(\" \")}\r\n        >\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport API from \"../utils/API\";\r\n\r\nclass Details extends React.Component {\r\n    render() {\r\n        // const [book, setBook] = useState({})\r\n\r\n        // // When this component mounts, grab the book with the _id of props.match.params.id\r\n        // // e.g. localhost:3000/books/599dcb67f0f16317844583fc\r\n        // const { id } = useParams()\r\n        // useEffect(() => {\r\n        //     API.getBook(id)\r\n        //         .then(res => setBook(res.data))\r\n        //         .catch(err => console.log(err));\r\n        // }, [])\r\n        return (\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col size=\"md-12\">\r\n                        <Jumbotron>\r\n                            <h1>\r\n                                {/* {book.title} by {book.author} */}\r\n                            </h1>\r\n                        </Jumbotron>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col size=\"md-10 md-offset-1\">\r\n                        <article>\r\n                            <h1>Synopsis</h1>\r\n                            <p>\r\n                                {/* {book.synopsis} */}\r\n                            </p>\r\n                        </article>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col size=\"md-2\">\r\n                        <Link to=\"/\">← Back to Authors</Link>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Details;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { Col, Row, Container, Jumbotron } from \"react-bootstrap\";\r\n\r\n\r\nclass NoMatch extends React.Component {\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col size=\"md-12\">\r\n                        <Jumbotron>\r\n                            <h1>404 Page Not Found</h1>\r\n                            <h1>\r\n                                <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n                                    🙄\r\n                      </span>\r\n                            </h1>\r\n                        </Jumbotron>\r\n                    </Col>\r\n                </Row>\r\n            </Container >\r\n        )\r\n    }\r\n}\r\n\r\nexport default NoMatch;\r\n\r\n","import React from 'react';\r\nimport { Jumbotron, Container } from 'react-bootstrap';\r\n\r\nexport default function GBJumbotron() {\r\n    return (\r\n        <div>\r\n            <Jumbotron fluid>\r\n                <Container>\r\n                    <h1>(React) Google Books Search</h1>\r\n                    <p>\r\n                        Search for books of interest & save them to your reading wish list!\r\n    </p>\r\n                </Container>\r\n            </Jumbotron>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n","import React from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Switch, Route } from 'react-router-dom'\nimport BarNav from './components/Navbar/navbar';\nimport { Search, Saved, NoMatch, Details } from './pages'\nimport GBJumbotron from \"./components/Jumbotron/jumbotron\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BarNav />\n      <GBJumbotron />\n      <Switch>\n        <Route path='/search'>\n          <Search />\n        </Route>\n        <Route path='/saved'>\n          <Saved />\n        </Route>\n        <Route path='/details'>\n          <Details />\n        </Route>\n        <Route path='/nomatch'>\n          <NoMatch />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}